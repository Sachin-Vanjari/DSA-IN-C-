vector<int> reverse(vector<int>ans)
{
	int s = 0;
	int e = ans.size() - 1;

	while(s < e)
	{
		swap(ans[s++],ans[e--]);
	}
	return ans;
}
vector<int> findArraySum(vector<int>&a, int n, vector<int>&b, int m) {
	// Write your code here.

	int i = n - 1;
	int j = m - 1;
	vector <int> ans;

	int carry = 0;

	while (i >= 0 && j >= 0)
	{
		int v1 = a[i];
		int v2 = b[j];

		int sum = v1 + v2 + carry;
		carry = sum / 10;
		sum %= 10;
		ans.push_back(sum);
		i--;
		j--;
	}

	while(i >= 0)
	{
		int sum = a[i] + carry;
		carry = sum / 10;
		sum %= 10;
		ans.push_back(sum);
		i--;
	}

	while(j >= 0)
	{
		int sum = b[j] + carry;
		carry = sum / 10;
		sum %= 10;
		ans.push_back(sum);
		j--;
	}

	while(carry != 0)
	{
		ans.push_back(carry);
		carry = 0;
	}

	return reverse(ans);

}
